<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

		

 
<!-- 
<beans:bean	id="dataSource" 
            class="org.apache.commons.dbcp.BasicDataSource"
			p:driverClassName="oracle.jdbc.OracleDriver"
			p:url="jdbc:oracle:thin:@127.0.0.1:1521:xe"
			p:username="scott" p:password="tiger"  
			p:maxActive="10"/> -->
			
				
	
	 <!-- 외부설정문서(properties파일) 가져오기 -->
	 <!-- 주석후 밑에 context:property-placeholder 사용 -->
<!--   <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
<!--   <beans:property name="locations">setLocations()호출 -->
<!--      <beans:value>/WEB-INF/spring/appServlet/db.properties</beans:value> -->
<!--   </beans:property> -->
<!-- </beans:bean> -->

<!-- 경로설정 -->
<context:property-placeholder location="/WEB-INF/spring/appServlet/*.properties"/>

<!-- oracle 연결!!!!! -->
<beans:bean	id="dataSource" 
   class="org.apache.commons.dbcp.BasicDataSource"
				p:driverClassName="${db.driver}"
				p:url="${db.url}"
				p:username="${db.user}"
				 p:password="${db.pass}"  
				 p:maxActive="10"/>
				
					
	
 	
<!-- <beans:bean id="sqlSessionFactory"
       class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" 
		p:configLocation="classpath:kdb/spring/conf/SqlMapConfig.xml"
/>  -->

			
<!-- SqlSessionFactoryBean 생성되면 SqlSessionFactory가 만들어진다. -->
   <beans:bean id="sqlSessionFactory" 
   class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations" value="classpath:mapper/*Mapper.xml" /><!--  Mapper.xml 로끝나는 mppter모두 등록 -->
		<beans:property name="typeAliasesPackage" value="kosta.mvc.dto" /><!--값 여러개면 , 사용/ dto폴더안에있는 클래스들 별칭 자동만듦 - 클래스명의 첫글만 소문자!! -->
		<beans:property name="configLocation" value="classpath:SqlMapConfig.xml"/>
		<!-- 필요시 configLocation 추가 사용 -->
	</beans:bean>
	

<!-- SqlSessionFactory를 가지고 SqlSession을 생성하는데, 그 일을 SqlSessionTemplate이 
	SqlSession을 대신하기 때문에 SqlSessionTemplate을 생성할때 생성자를 통해
	SqlSessionFactory를 전달한다. -->
	
  <beans:bean id="sqlSession"
     class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>
	
	<!-- interface 기반의 Mapper 등록하기 -->
	<beans:bean class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="mapperInterface" value="kosta.mvc.mapper.StudentMapper"/><!-- , * 사용불가, 더넣을거면 더 추가해야함 -->
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory"/><!-- value안됨, ref로 별칭넣어 설정 -->
	</beans:bean>
	
</beans:beans>


